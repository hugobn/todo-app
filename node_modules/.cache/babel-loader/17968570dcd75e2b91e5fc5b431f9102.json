{"ast":null,"code":"/**\n * React Router DOM v6.3.0\n *\n * Copyright (c) Remix Software Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE.md file in the root directory of this source tree.\n *\n * @license MIT\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('react'), require('history'), require('react-router')) : typeof define === 'function' && define.amd ? define(['exports', 'react', 'history', 'react-router'], factory) : (global = global || self, factory(global.ReactRouterDOM = {}, global.React, global.HistoryLibrary, global.ReactRouter));\n})(this, function (exports, React, history, reactRouter) {\n  'use strict';\n\n  function _extends() {\n    _extends = Object.assign || function (target) {\n      for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i];\n\n        for (var key in source) {\n          if (Object.prototype.hasOwnProperty.call(source, key)) {\n            target[key] = source[key];\n          }\n        }\n      }\n\n      return target;\n    };\n\n    return _extends.apply(this, arguments);\n  }\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  const _excluded = [\"onClick\", \"reloadDocument\", \"replace\", \"state\", \"target\", \"to\"],\n        _excluded2 = [\"aria-current\", \"caseSensitive\", \"className\", \"end\", \"style\", \"to\", \"children\"];\n\n  function warning(cond, message) {\n    if (!cond) {\n      // eslint-disable-next-line no-console\n      if (typeof console !== \"undefined\") console.warn(message);\n\n      try {\n        // Welcome to debugging React Router!\n        //\n        // This error is thrown as a convenience so you can more easily\n        // find the source for a warning that appears in the console by\n        // enabling \"pause on exceptions\" in your JavaScript debugger.\n        throw new Error(message); // eslint-disable-next-line no-empty\n      } catch (e) {}\n    }\n  } ////////////////////////////////////////////////////////////////////////////////\n  // COMPONENTS\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n   */\n\n\n  function BrowserRouter(_ref) {\n    let {\n      basename,\n      children,\n      window\n    } = _ref;\n    let historyRef = React.useRef();\n\n    if (historyRef.current == null) {\n      historyRef.current = history.createBrowserHistory({\n        window\n      });\n    }\n\n    let history$1 = historyRef.current;\n    let [state, setState] = React.useState({\n      action: history$1.action,\n      location: history$1.location\n    });\n    React.useLayoutEffect(() => history$1.listen(setState), [history$1]);\n    return /*#__PURE__*/React.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history$1\n    });\n  }\n  /**\n   * A `<Router>` for use in web browsers. Stores the location in the hash\n   * portion of the URL so it is not sent to the server.\n   */\n\n\n  function HashRouter(_ref2) {\n    let {\n      basename,\n      children,\n      window\n    } = _ref2;\n    let historyRef = React.useRef();\n\n    if (historyRef.current == null) {\n      historyRef.current = history.createHashHistory({\n        window\n      });\n    }\n\n    let history$1 = historyRef.current;\n    let [state, setState] = React.useState({\n      action: history$1.action,\n      location: history$1.location\n    });\n    React.useLayoutEffect(() => history$1.listen(setState), [history$1]);\n    return /*#__PURE__*/React.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history$1\n    });\n  }\n  /**\n   * A `<Router>` that accepts a pre-instantiated history object. It's important\n   * to note that using your own history object is highly discouraged and may add\n   * two versions of the history library to your bundles unless you use the same\n   * version of the history library that React Router uses internally.\n   */\n\n\n  function HistoryRouter(_ref3) {\n    let {\n      basename,\n      children,\n      history\n    } = _ref3;\n    const [state, setState] = React.useState({\n      action: history.action,\n      location: history.location\n    });\n    React.useLayoutEffect(() => history.listen(setState), [history]);\n    return /*#__PURE__*/React.createElement(reactRouter.Router, {\n      basename: basename,\n      children: children,\n      location: state.location,\n      navigationType: state.action,\n      navigator: history\n    });\n  }\n\n  {\n    HistoryRouter.displayName = \"unstable_HistoryRouter\";\n  }\n\n  function isModifiedEvent(event) {\n    return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n  }\n  /**\n   * The public API for rendering a history-aware <a>.\n   */\n\n\n  const Link = /*#__PURE__*/React.forwardRef(function LinkWithRef(_ref4, ref) {\n    let {\n      onClick,\n      reloadDocument,\n      replace = false,\n      state,\n      target,\n      to\n    } = _ref4,\n        rest = _objectWithoutPropertiesLoose(_ref4, _excluded);\n\n    let href = reactRouter.useHref(to);\n    let internalOnClick = useLinkClickHandler(to, {\n      replace,\n      state,\n      target\n    });\n\n    function handleClick(event) {\n      if (onClick) onClick(event);\n\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      /*#__PURE__*/\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      React.createElement(\"a\", _extends({}, rest, {\n        href: href,\n        onClick: handleClick,\n        ref: ref,\n        target: target\n      }))\n    );\n  });\n  {\n    Link.displayName = \"Link\";\n  }\n  /**\n   * A <Link> wrapper that knows if it's \"active\" or not.\n   */\n\n  const NavLink = /*#__PURE__*/React.forwardRef(function NavLinkWithRef(_ref5, ref) {\n    let {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children\n    } = _ref5,\n        rest = _objectWithoutPropertiesLoose(_ref5, _excluded2);\n\n    let location = reactRouter.useLocation();\n    let path = reactRouter.useResolvedPath(to);\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive = locationPathname === toPathname || !end && locationPathname.startsWith(toPathname) && locationPathname.charAt(toPathname.length) === \"/\";\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n    let className;\n\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({\n        isActive\n      });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null].filter(Boolean).join(\" \");\n    }\n\n    let style = typeof styleProp === \"function\" ? styleProp({\n      isActive\n    }) : styleProp;\n    return /*#__PURE__*/React.createElement(Link, _extends({}, rest, {\n      \"aria-current\": ariaCurrent,\n      className: className,\n      ref: ref,\n      style: style,\n      to: to\n    }), typeof children === \"function\" ? children({\n      isActive\n    }) : children);\n  });\n  {\n    NavLink.displayName = \"NavLink\";\n  } ////////////////////////////////////////////////////////////////////////////////\n  // HOOKS\n  ////////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Handles the click behavior for router `<Link>` components. This is useful if\n   * you need to create custom `<Link>` components with the same click behavior we\n   * use in our exported `<Link>`.\n   */\n\n  function useLinkClickHandler(to, _temp) {\n    let {\n      target,\n      replace: replaceProp,\n      state\n    } = _temp === void 0 ? {} : _temp;\n    let navigate = reactRouter.useNavigate();\n    let location = reactRouter.useLocation();\n    let path = reactRouter.useResolvedPath(to);\n    return React.useCallback(event => {\n      if (event.button === 0 && ( // Ignore everything but left clicks\n      !target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault(); // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n\n        let replace = !!replaceProp || reactRouter.createPath(location) === reactRouter.createPath(path);\n        navigate(to, {\n          replace,\n          state\n        });\n      }\n    }, [location, navigate, path, replaceProp, state, target, to]);\n  }\n  /**\n   * A convenient wrapper for reading and writing search parameters via the\n   * URLSearchParams interface.\n   */\n\n\n  function useSearchParams(defaultInit) {\n    warning(typeof URLSearchParams !== \"undefined\", \"You cannot use the `useSearchParams` hook in a browser that does not \" + \"support the URLSearchParams API. If you need to support Internet \" + \"Explorer 11, we recommend you load a polyfill such as \" + \"https://github.com/ungap/url-search-params\\n\\n\" + \"If you're unsure how to load polyfills, we recommend you check out \" + \"https://polyfill.io/v3/ which provides some recommendations about how \" + \"to load polyfills only for users that need them, instead of for every \" + \"user.\");\n    let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n    let location = reactRouter.useLocation();\n    let searchParams = React.useMemo(() => {\n      let searchParams = createSearchParams(location.search);\n\n      for (let key of defaultSearchParamsRef.current.keys()) {\n        if (!searchParams.has(key)) {\n          defaultSearchParamsRef.current.getAll(key).forEach(value => {\n            searchParams.append(key, value);\n          });\n        }\n      }\n\n      return searchParams;\n    }, [location.search]);\n    let navigate = reactRouter.useNavigate();\n    let setSearchParams = React.useCallback((nextInit, navigateOptions) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    }, [navigate]);\n    return [searchParams, setSearchParams];\n  }\n  /**\n   * Creates a URLSearchParams object using the given initializer.\n   *\n   * This is identical to `new URLSearchParams(init)` except it also\n   * supports arrays as values in the object form of the initializer\n   * instead of just strings. This is convenient when you need multiple\n   * values for a given key, but don't want to use an array initializer.\n   *\n   * For example, instead of:\n   *\n   *   let searchParams = new URLSearchParams([\n   *     ['sort', 'name'],\n   *     ['sort', 'price']\n   *   ]);\n   *\n   * you can do:\n   *\n   *   let searchParams = createSearchParams({\n   *     sort: ['name', 'price']\n   *   });\n   */\n\n\n  function createSearchParams(init) {\n    if (init === void 0) {\n      init = \"\";\n    }\n\n    return new URLSearchParams(typeof init === \"string\" || Array.isArray(init) || init instanceof URLSearchParams ? init : Object.keys(init).reduce((memo, key) => {\n      let value = init[key];\n      return memo.concat(Array.isArray(value) ? value.map(v => [key, v]) : [[key, value]]);\n    }, []));\n  }\n\n  Object.defineProperty(exports, 'MemoryRouter', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.MemoryRouter;\n    }\n  });\n  Object.defineProperty(exports, 'Navigate', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Navigate;\n    }\n  });\n  Object.defineProperty(exports, 'NavigationType', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.NavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'Outlet', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Outlet;\n    }\n  });\n  Object.defineProperty(exports, 'Route', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Route;\n    }\n  });\n  Object.defineProperty(exports, 'Router', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Router;\n    }\n  });\n  Object.defineProperty(exports, 'Routes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.Routes;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_LocationContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_LocationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_NavigationContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_NavigationContext;\n    }\n  });\n  Object.defineProperty(exports, 'UNSAFE_RouteContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.UNSAFE_RouteContext;\n    }\n  });\n  Object.defineProperty(exports, 'createPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createPath;\n    }\n  });\n  Object.defineProperty(exports, 'createRoutesFromChildren', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.createRoutesFromChildren;\n    }\n  });\n  Object.defineProperty(exports, 'generatePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.generatePath;\n    }\n  });\n  Object.defineProperty(exports, 'matchPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.matchPath;\n    }\n  });\n  Object.defineProperty(exports, 'matchRoutes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.matchRoutes;\n    }\n  });\n  Object.defineProperty(exports, 'parsePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.parsePath;\n    }\n  });\n  Object.defineProperty(exports, 'renderMatches', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.renderMatches;\n    }\n  });\n  Object.defineProperty(exports, 'resolvePath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.resolvePath;\n    }\n  });\n  Object.defineProperty(exports, 'useHref', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useHref;\n    }\n  });\n  Object.defineProperty(exports, 'useInRouterContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useInRouterContext;\n    }\n  });\n  Object.defineProperty(exports, 'useLocation', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useLocation;\n    }\n  });\n  Object.defineProperty(exports, 'useMatch', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useMatch;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigate', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigate;\n    }\n  });\n  Object.defineProperty(exports, 'useNavigationType', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useNavigationType;\n    }\n  });\n  Object.defineProperty(exports, 'useOutlet', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useOutlet;\n    }\n  });\n  Object.defineProperty(exports, 'useOutletContext', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useOutletContext;\n    }\n  });\n  Object.defineProperty(exports, 'useParams', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useParams;\n    }\n  });\n  Object.defineProperty(exports, 'useResolvedPath', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useResolvedPath;\n    }\n  });\n  Object.defineProperty(exports, 'useRoutes', {\n    enumerable: true,\n    get: function () {\n      return reactRouter.useRoutes;\n    }\n  });\n  exports.BrowserRouter = BrowserRouter;\n  exports.HashRouter = HashRouter;\n  exports.Link = Link;\n  exports.NavLink = NavLink;\n  exports.createSearchParams = createSearchParams;\n  exports.unstable_HistoryRouter = HistoryRouter;\n  exports.useLinkClickHandler = useLinkClickHandler;\n  exports.useSearchParams = useSearchParams;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"mappings":"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","names":["warning","cond","message","console","warn","Error","e","BrowserRouter","basename","children","window","_ref","historyRef","React","current","createBrowserHistory","history","state","setState","action","location","listen","React.createElement","Router","navigationType","navigator","HashRouter","_ref2","createHashHistory","HistoryRouter","_ref3","displayName","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link","LinkWithRef","ref","onClick","reloadDocument","replace","target","to","_ref4","rest","href","useHref","internalOnClick","useLinkClickHandler","handleClick","defaultPrevented","NavLink","NavLinkWithRef","ariaCurrentProp","caseSensitive","className","classNameProp","end","style","styleProp","_ref5","useLocation","path","useResolvedPath","locationPathname","pathname","toPathname","toLowerCase","isActive","startsWith","charAt","length","ariaCurrent","undefined","filter","Boolean","join","replaceProp","_temp","navigate","useNavigate","button","preventDefault","createPath","useSearchParams","defaultInit","URLSearchParams","defaultSearchParamsRef","createSearchParams","searchParams","search","key","keys","has","getAll","forEach","value","append","setSearchParams","nextInit","navigateOptions","init","Array","isArray","Object","reduce","memo","concat","map","v"],"sources":["/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/frontend/packages/react-router-dom/index.tsx"],"sourcesContent":["/**\n * NOTE: If you refactor this to split up the modules into separate files,\n * you'll need to update the rollup config for react-router-dom-v5-compat.\n */\nimport * as React from \"react\";\nimport type { BrowserHistory, HashHistory, History } from \"history\";\nimport { createBrowserHistory, createHashHistory } from \"history\";\nimport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  resolvePath,\n  renderMatches,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n} from \"react-router\";\nimport type { To } from \"react-router\";\n\nfunction warning(cond: boolean, message: string): void {\n  if (!cond) {\n    // eslint-disable-next-line no-console\n    if (typeof console !== \"undefined\") console.warn(message);\n\n    try {\n      // Welcome to debugging React Router!\n      //\n      // This error is thrown as a convenience so you can more easily\n      // find the source for a warning that appears in the console by\n      // enabling \"pause on exceptions\" in your JavaScript debugger.\n      throw new Error(message);\n      // eslint-disable-next-line no-empty\n    } catch (e) {}\n  }\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// RE-EXPORTS\n////////////////////////////////////////////////////////////////////////////////\n\n// Note: Keep in sync with react-router exports!\nexport {\n  MemoryRouter,\n  Navigate,\n  Outlet,\n  Route,\n  Router,\n  Routes,\n  createRoutesFromChildren,\n  generatePath,\n  matchRoutes,\n  matchPath,\n  createPath,\n  parsePath,\n  renderMatches,\n  resolvePath,\n  useHref,\n  useInRouterContext,\n  useLocation,\n  useMatch,\n  useNavigate,\n  useNavigationType,\n  useOutlet,\n  useParams,\n  useResolvedPath,\n  useRoutes,\n  useOutletContext,\n};\n\nexport { NavigationType } from \"react-router\";\nexport type {\n  Hash,\n  Location,\n  Path,\n  To,\n  MemoryRouterProps,\n  NavigateFunction,\n  NavigateOptions,\n  NavigateProps,\n  Navigator,\n  OutletProps,\n  Params,\n  PathMatch,\n  RouteMatch,\n  RouteObject,\n  RouteProps,\n  PathRouteProps,\n  LayoutRouteProps,\n  IndexRouteProps,\n  RouterProps,\n  Pathname,\n  Search,\n  RoutesProps,\n} from \"react-router\";\n\n///////////////////////////////////////////////////////////////////////////////\n// DANGER! PLEASE READ ME!\n// We provide these exports as an escape hatch in the event that you need any\n// routing data that we don't provide an explicit API for. With that said, we\n// want to cover your use case if we can, so if you feel the need to use these\n// we want to hear from you. Let us know what you're building and we'll do our\n// best to make sure we can support you!\n//\n// We consider these exports an implementation detail and do not guarantee\n// against any breaking changes, regardless of the semver release. Use with\n// extreme caution and only if you understand the consequences. Godspeed.\n///////////////////////////////////////////////////////////////////////////////\n\n/** @internal */\nexport {\n  UNSAFE_NavigationContext,\n  UNSAFE_LocationContext,\n  UNSAFE_RouteContext,\n} from \"react-router\";\n\n////////////////////////////////////////////////////////////////////////////////\n// COMPONENTS\n////////////////////////////////////////////////////////////////////////////////\n\nexport interface BrowserRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Provides the cleanest URLs.\n */\nexport function BrowserRouter({\n  basename,\n  children,\n  window,\n}: BrowserRouterProps) {\n  let historyRef = React.useRef<BrowserHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createBrowserHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HashRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  window?: Window;\n}\n\n/**\n * A `<Router>` for use in web browsers. Stores the location in the hash\n * portion of the URL so it is not sent to the server.\n */\nexport function HashRouter({ basename, children, window }: HashRouterProps) {\n  let historyRef = React.useRef<HashHistory>();\n  if (historyRef.current == null) {\n    historyRef.current = createHashHistory({ window });\n  }\n\n  let history = historyRef.current;\n  let [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nexport interface HistoryRouterProps {\n  basename?: string;\n  children?: React.ReactNode;\n  history: History;\n}\n\n/**\n * A `<Router>` that accepts a pre-instantiated history object. It's important\n * to note that using your own history object is highly discouraged and may add\n * two versions of the history library to your bundles unless you use the same\n * version of the history library that React Router uses internally.\n */\nfunction HistoryRouter({ basename, children, history }: HistoryRouterProps) {\n  const [state, setState] = React.useState({\n    action: history.action,\n    location: history.location,\n  });\n\n  React.useLayoutEffect(() => history.listen(setState), [history]);\n\n  return (\n    <Router\n      basename={basename}\n      children={children}\n      location={state.location}\n      navigationType={state.action}\n      navigator={history}\n    />\n  );\n}\n\nif (__DEV__) {\n  HistoryRouter.displayName = \"unstable_HistoryRouter\";\n}\n\nexport { HistoryRouter as unstable_HistoryRouter };\n\nfunction isModifiedEvent(event: React.MouseEvent) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n}\n\nexport interface LinkProps\n  extends Omit<React.AnchorHTMLAttributes<HTMLAnchorElement>, \"href\"> {\n  reloadDocument?: boolean;\n  replace?: boolean;\n  state?: any;\n  to: To;\n}\n\n/**\n * The public API for rendering a history-aware <a>.\n */\nexport const Link = React.forwardRef<HTMLAnchorElement, LinkProps>(\n  function LinkWithRef(\n    { onClick, reloadDocument, replace = false, state, target, to, ...rest },\n    ref\n  ) {\n    let href = useHref(to);\n    let internalOnClick = useLinkClickHandler(to, { replace, state, target });\n    function handleClick(\n      event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\n    ) {\n      if (onClick) onClick(event);\n      if (!event.defaultPrevented && !reloadDocument) {\n        internalOnClick(event);\n      }\n    }\n\n    return (\n      // eslint-disable-next-line jsx-a11y/anchor-has-content\n      <a\n        {...rest}\n        href={href}\n        onClick={handleClick}\n        ref={ref}\n        target={target}\n      />\n    );\n  }\n);\n\nif (__DEV__) {\n  Link.displayName = \"Link\";\n}\n\nexport interface NavLinkProps\n  extends Omit<LinkProps, \"className\" | \"style\" | \"children\"> {\n  children?:\n    | React.ReactNode\n    | ((props: { isActive: boolean }) => React.ReactNode);\n  caseSensitive?: boolean;\n  className?: string | ((props: { isActive: boolean }) => string | undefined);\n  end?: boolean;\n  style?:\n    | React.CSSProperties\n    | ((props: { isActive: boolean }) => React.CSSProperties);\n}\n\n/**\n * A <Link> wrapper that knows if it's \"active\" or not.\n */\nexport const NavLink = React.forwardRef<HTMLAnchorElement, NavLinkProps>(\n  function NavLinkWithRef(\n    {\n      \"aria-current\": ariaCurrentProp = \"page\",\n      caseSensitive = false,\n      className: classNameProp = \"\",\n      end = false,\n      style: styleProp,\n      to,\n      children,\n      ...rest\n    },\n    ref\n  ) {\n    let location = useLocation();\n    let path = useResolvedPath(to);\n\n    let locationPathname = location.pathname;\n    let toPathname = path.pathname;\n    if (!caseSensitive) {\n      locationPathname = locationPathname.toLowerCase();\n      toPathname = toPathname.toLowerCase();\n    }\n\n    let isActive =\n      locationPathname === toPathname ||\n      (!end &&\n        locationPathname.startsWith(toPathname) &&\n        locationPathname.charAt(toPathname.length) === \"/\");\n\n    let ariaCurrent = isActive ? ariaCurrentProp : undefined;\n\n    let className: string | undefined;\n    if (typeof classNameProp === \"function\") {\n      className = classNameProp({ isActive });\n    } else {\n      // If the className prop is not a function, we use a default `active`\n      // class for <NavLink />s that are active. In v5 `active` was the default\n      // value for `activeClassName`, but we are removing that API and can still\n      // use the old default behavior for a cleaner upgrade path and keep the\n      // simple styling rules working as they currently do.\n      className = [classNameProp, isActive ? \"active\" : null]\n        .filter(Boolean)\n        .join(\" \");\n    }\n\n    let style =\n      typeof styleProp === \"function\" ? styleProp({ isActive }) : styleProp;\n\n    return (\n      <Link\n        {...rest}\n        aria-current={ariaCurrent}\n        className={className}\n        ref={ref}\n        style={style}\n        to={to}\n      >\n        {typeof children === \"function\" ? children({ isActive }) : children}\n      </Link>\n    );\n  }\n);\n\nif (__DEV__) {\n  NavLink.displayName = \"NavLink\";\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// HOOKS\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * Handles the click behavior for router `<Link>` components. This is useful if\n * you need to create custom `<Link>` components with the same click behavior we\n * use in our exported `<Link>`.\n */\nexport function useLinkClickHandler<E extends Element = HTMLAnchorElement>(\n  to: To,\n  {\n    target,\n    replace: replaceProp,\n    state,\n  }: {\n    target?: React.HTMLAttributeAnchorTarget;\n    replace?: boolean;\n    state?: any;\n  } = {}\n): (event: React.MouseEvent<E, MouseEvent>) => void {\n  let navigate = useNavigate();\n  let location = useLocation();\n  let path = useResolvedPath(to);\n\n  return React.useCallback(\n    (event: React.MouseEvent<E, MouseEvent>) => {\n      if (\n        event.button === 0 && // Ignore everything but left clicks\n        (!target || target === \"_self\") && // Let browser handle \"target=_blank\" etc.\n        !isModifiedEvent(event) // Ignore clicks with modifier keys\n      ) {\n        event.preventDefault();\n\n        // If the URL hasn't changed, a regular <a> will do a replace instead of\n        // a push, so do the same here.\n        let replace =\n          !!replaceProp || createPath(location) === createPath(path);\n\n        navigate(to, { replace, state });\n      }\n    },\n    [location, navigate, path, replaceProp, state, target, to]\n  );\n}\n\n/**\n * A convenient wrapper for reading and writing search parameters via the\n * URLSearchParams interface.\n */\nexport function useSearchParams(defaultInit?: URLSearchParamsInit) {\n  warning(\n    typeof URLSearchParams !== \"undefined\",\n    `You cannot use the \\`useSearchParams\\` hook in a browser that does not ` +\n      `support the URLSearchParams API. If you need to support Internet ` +\n      `Explorer 11, we recommend you load a polyfill such as ` +\n      `https://github.com/ungap/url-search-params\\n\\n` +\n      `If you're unsure how to load polyfills, we recommend you check out ` +\n      `https://polyfill.io/v3/ which provides some recommendations about how ` +\n      `to load polyfills only for users that need them, instead of for every ` +\n      `user.`\n  );\n\n  let defaultSearchParamsRef = React.useRef(createSearchParams(defaultInit));\n\n  let location = useLocation();\n  let searchParams = React.useMemo(() => {\n    let searchParams = createSearchParams(location.search);\n\n    for (let key of defaultSearchParamsRef.current.keys()) {\n      if (!searchParams.has(key)) {\n        defaultSearchParamsRef.current.getAll(key).forEach((value) => {\n          searchParams.append(key, value);\n        });\n      }\n    }\n\n    return searchParams;\n  }, [location.search]);\n\n  let navigate = useNavigate();\n  let setSearchParams = React.useCallback(\n    (\n      nextInit: URLSearchParamsInit,\n      navigateOptions?: { replace?: boolean; state?: any }\n    ) => {\n      navigate(\"?\" + createSearchParams(nextInit), navigateOptions);\n    },\n    [navigate]\n  );\n\n  return [searchParams, setSearchParams] as const;\n}\n\nexport type ParamKeyValuePair = [string, string];\n\nexport type URLSearchParamsInit =\n  | string\n  | ParamKeyValuePair[]\n  | Record<string, string | string[]>\n  | URLSearchParams;\n\n/**\n * Creates a URLSearchParams object using the given initializer.\n *\n * This is identical to `new URLSearchParams(init)` except it also\n * supports arrays as values in the object form of the initializer\n * instead of just strings. This is convenient when you need multiple\n * values for a given key, but don't want to use an array initializer.\n *\n * For example, instead of:\n *\n *   let searchParams = new URLSearchParams([\n *     ['sort', 'name'],\n *     ['sort', 'price']\n *   ]);\n *\n * you can do:\n *\n *   let searchParams = createSearchParams({\n *     sort: ['name', 'price']\n *   });\n */\nexport function createSearchParams(\n  init: URLSearchParamsInit = \"\"\n): URLSearchParams {\n  return new URLSearchParams(\n    typeof init === \"string\" ||\n    Array.isArray(init) ||\n    init instanceof URLSearchParams\n      ? init\n      : Object.keys(init).reduce((memo, key) => {\n          let value = init[key];\n          return memo.concat(\n            Array.isArray(value) ? value.map((v) => [key, v]) : [[key, value]]\n          );\n        }, [] as ParamKeyValuePair[])\n  );\n}\n"]},"metadata":{},"sourceType":"script"}