{"ast":null,"code":"import _classCallCheck from \"/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/todo-app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/todo-app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\nimport API_URL from '../../Constants';\nexport var USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser';\n\nvar AuthenticationService = /*#__PURE__*/function () {\n  function AuthenticationService() {\n    _classCallCheck(this, AuthenticationService);\n  }\n\n  _createClass(AuthenticationService, [{\n    key: \"createBasicAuthToken\",\n    value: function createBasicAuthToken(username, password) {\n      return 'Basic ' + window.btoa(username + ':' + password);\n    }\n  }, {\n    key: \"executeJwtAuthenticationService\",\n    value: function executeJwtAuthenticationService(username, password) {\n      return axios.post('API_URL/authenticate', {\n        username: username,\n        password: password\n      });\n    }\n  }, {\n    key: \"executeBasicAuthenticationService\",\n    value: function executeBasicAuthenticationService(username, password) {\n      return axios.get('API_URL/basicauth', {\n        headers: {\n          authorization: this.createBasicAuthToken(username, password)\n        }\n      });\n    }\n  }, {\n    key: \"registerSucessfulLoginForJwt\",\n    value: function registerSucessfulLoginForJwt(username, token) {\n      sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n      this.setupAxiosInterceptors(this.createJWTToken(token));\n    }\n  }, {\n    key: \"createJWTToken\",\n    value: function createJWTToken(token) {\n      return 'Bearer ' + token;\n    }\n  }, {\n    key: \"registerSucessfulLogin\",\n    value: function registerSucessfulLogin(username, password) {\n      //console.log('registerSucessfulLogin')\n      sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username);\n      this.setupAxiosInterceptors(this.createBasicAuthToken(username, password));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n    }\n  }, {\n    key: \"isUserLoggedIn\",\n    value: function isUserLoggedIn() {\n      var user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n\n      if (user === null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getLoggedInUserName\",\n    value: function getLoggedInUserName() {\n      var user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME);\n\n      if (user === null) {\n        return \"\";\n      } else return user;\n    }\n  }, {\n    key: \"setupAxiosInterceptors\",\n    value: function setupAxiosInterceptors(token) {\n      var _this = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this.isUserLoggedIn()) {\n          config.headers.authorization = token;\n        }\n\n        return config;\n      });\n    }\n  }]);\n\n  return AuthenticationService;\n}();\n\nexport default new AuthenticationService();","map":{"version":3,"names":["axios","API_URL","USER_NAME_SESSION_ATTRIBUTE_NAME","AuthenticationService","username","password","window","btoa","post","get","headers","authorization","createBasicAuthToken","token","sessionStorage","setItem","setupAxiosInterceptors","createJWTToken","removeItem","user","getItem","interceptors","request","use","config","isUserLoggedIn"],"sources":["/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/todo-app/Frontend/src/components/todo/AuthenticationService.js"],"sourcesContent":["import axios from \"axios\"\nimport API_URL from '../../Constants'\n\nexport const USER_NAME_SESSION_ATTRIBUTE_NAME = 'authenticatedUser'\n\nclass AuthenticationService {\n\n    createBasicAuthToken(username, password){\n        return 'Basic ' + window.btoa(username + ':' + password)\n    }\n\n    executeJwtAuthenticationService(username, password){\n        return axios.post('API_URL/authenticate',\n            {\n                username,\n                password\n            }\n        )\n    }\n\n    executeBasicAuthenticationService(username, password){\n        return axios.get('API_URL/basicauth',\n            {\n                headers: {\n                    authorization: this.createBasicAuthToken(username, password)\n                }\n            }\n        )\n    }\n\n    registerSucessfulLoginForJwt(username, token){\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        this.setupAxiosInterceptors(this.createJWTToken(token))\n    }\n\n    createJWTToken(token){\n        return 'Bearer ' + token\n    }\n\n    registerSucessfulLogin(username, password){\n        //console.log('registerSucessfulLogin')\n        sessionStorage.setItem(USER_NAME_SESSION_ATTRIBUTE_NAME, username)\n        this.setupAxiosInterceptors(this.createBasicAuthToken(username, password))\n    }\n\n    logout(){\n        sessionStorage.removeItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n    }\n\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if(user === null){\n            return false\n        }else{ return true }\n    }\n\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem(USER_NAME_SESSION_ATTRIBUTE_NAME)\n        if(user === null){\n            return \"\"\n        }else return user\n    }\n\n    setupAxiosInterceptors(token){\n        axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()){\n                    config.headers.authorization = token\n                }\n                return config\n            }\n        )\n    }\n\n}\n\nexport default new AuthenticationService()"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,iBAApB;AAEA,OAAO,IAAMC,gCAAgC,GAAG,mBAAzC;;IAEDC,qB;;;;;;;yCAEmBC,Q,EAAUC,Q,EAAS;MACpC,OAAO,WAAWC,MAAM,CAACC,IAAP,CAAYH,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAlB;IACH;;;oDAE+BD,Q,EAAUC,Q,EAAS;MAC/C,OAAOL,KAAK,CAACQ,IAAN,CAAW,sBAAX,EACH;QACIJ,QAAQ,EAARA,QADJ;QAEIC,QAAQ,EAARA;MAFJ,CADG,CAAP;IAMH;;;sDAEiCD,Q,EAAUC,Q,EAAS;MACjD,OAAOL,KAAK,CAACS,GAAN,CAAU,mBAAV,EACH;QACIC,OAAO,EAAE;UACLC,aAAa,EAAE,KAAKC,oBAAL,CAA0BR,QAA1B,EAAoCC,QAApC;QADV;MADb,CADG,CAAP;IAOH;;;iDAE4BD,Q,EAAUS,K,EAAM;MACzCC,cAAc,CAACC,OAAf,CAAuBb,gCAAvB,EAAyDE,QAAzD;MACA,KAAKY,sBAAL,CAA4B,KAAKC,cAAL,CAAoBJ,KAApB,CAA5B;IACH;;;mCAEcA,K,EAAM;MACjB,OAAO,YAAYA,KAAnB;IACH;;;2CAEsBT,Q,EAAUC,Q,EAAS;MACtC;MACAS,cAAc,CAACC,OAAf,CAAuBb,gCAAvB,EAAyDE,QAAzD;MACA,KAAKY,sBAAL,CAA4B,KAAKJ,oBAAL,CAA0BR,QAA1B,EAAoCC,QAApC,CAA5B;IACH;;;6BAEO;MACJS,cAAc,CAACI,UAAf,CAA0BhB,gCAA1B;IACH;;;qCAEe;MACZ,IAAIiB,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuBlB,gCAAvB,CAAX;;MACA,IAAGiB,IAAI,KAAK,IAAZ,EAAiB;QACb,OAAO,KAAP;MACH,CAFD,MAEK;QAAE,OAAO,IAAP;MAAa;IACvB;;;0CAEoB;MACjB,IAAIA,IAAI,GAAGL,cAAc,CAACM,OAAf,CAAuBlB,gCAAvB,CAAX;;MACA,IAAGiB,IAAI,KAAK,IAAZ,EAAiB;QACb,OAAO,EAAP;MACH,CAFD,MAEM,OAAOA,IAAP;IACT;;;2CAEsBN,K,EAAM;MAAA;;MACzBb,KAAK,CAACqB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAACC,MAAD,EAAY;QACR,IAAG,KAAI,CAACC,cAAL,EAAH,EAAyB;UACrBD,MAAM,CAACd,OAAP,CAAeC,aAAf,GAA+BE,KAA/B;QACH;;QACD,OAAOW,MAAP;MACH,CANL;IAQH;;;;;;AAIL,eAAe,IAAIrB,qBAAJ,EAAf"},"metadata":{},"sourceType":"module"}