{"ast":null,"code":"import _classCallCheck from \"/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/todo-app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/todo-app/Frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from \"axios\";\n\nvar AuthenticationService = /*#__PURE__*/function () {\n  function AuthenticationService() {\n    _classCallCheck(this, AuthenticationService);\n  }\n\n  _createClass(AuthenticationService, [{\n    key: \"createBasicAuthToken\",\n    value: function createBasicAuthToken(username, password) {\n      return 'Basic ' + window.btoa(username + ':' + password);\n    }\n  }, {\n    key: \"executeBasicAuthenticationService\",\n    value: function executeBasicAuthenticationService(username, password) {\n      return axios.get('http://localhost:9090/basicauth', {\n        headers: {\n          authorization: basicAuthHeader\n        }\n      });\n    }\n  }, {\n    key: \"registerSucessfulLogin\",\n    value: function registerSucessfulLogin(username, password) {\n      var basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password);\n      console.log('registerSucessfulLogin');\n      sessionStorage.setItem('authenticatedUser', username);\n      this.setupAxiosInterceptors(basicAuthHeader);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      sessionStorage.removeItem('authenticatedUser');\n    }\n  }, {\n    key: \"isUserLoggedIn\",\n    value: function isUserLoggedIn() {\n      var user = sessionStorage.getItem('authenticatedUser');\n\n      if (user === null) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"getLoggedInUserName\",\n    value: function getLoggedInUserName() {\n      var user = sessionStorage.getItem('authenticatedUser');\n\n      if (user === null) {\n        return \"\";\n      } else return user;\n    }\n  }, {\n    key: \"setupAxiosInterceptors\",\n    value: function setupAxiosInterceptors(basicAuthHeader) {\n      var _this = this;\n\n      axios.interceptors.request.use(function (config) {\n        if (_this.isUserLoggedIn()) {\n          config.headers.authorization = basicAuthHeader;\n        }\n\n        return config;\n      });\n    }\n  }]);\n\n  return AuthenticationService;\n}();\n\nexport default new AuthenticationService();","map":{"version":3,"names":["axios","AuthenticationService","username","password","window","btoa","get","headers","authorization","basicAuthHeader","console","log","sessionStorage","setItem","setupAxiosInterceptors","removeItem","user","getItem","interceptors","request","use","config","isUserLoggedIn"],"sources":["/home/developer/Documents/Udemy/Java/FullStack28Minutes/ReactApps/todo-app/Frontend/src/components/todo/AuthenticationService.js"],"sourcesContent":["import axios from \"axios\"\n\nclass AuthenticationService {\n\n    createBasicAuthToken(username, password){\n        return 'Basic ' + window.btoa(username + ':' + password)\n    }\n\n    executeBasicAuthenticationService(username, password){\n\n        return axios.get('http://localhost:9090/basicauth',\n            {\n                headers: {\n                    authorization: basicAuthHeader\n                }\n            }\n        )\n    }\n\n    registerSucessfulLogin(username, password){\n        let basicAuthHeader = 'Basic ' + window.btoa(username + ':' + password)\n\n        console.log('registerSucessfulLogin')\n        sessionStorage.setItem('authenticatedUser', username)\n        this.setupAxiosInterceptors(basicAuthHeader)\n    }\n\n    logout(){\n        sessionStorage.removeItem('authenticatedUser')\n    }\n\n    isUserLoggedIn(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null){\n            return false\n        }else{ return true }\n    }\n\n    getLoggedInUserName(){\n        let user = sessionStorage.getItem('authenticatedUser')\n        if(user === null){\n            return \"\"\n        }else return user\n    }\n\n    setupAxiosInterceptors(basicAuthHeader){\n        axios.interceptors.request.use(\n            (config) => {\n                if(this.isUserLoggedIn()){\n                    config.headers.authorization = basicAuthHeader\n                }\n                return config\n            }\n        )\n    }\n\n}\n\nexport default new AuthenticationService()"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,qB;;;;;;;yCAEmBC,Q,EAAUC,Q,EAAS;MACpC,OAAO,WAAWC,MAAM,CAACC,IAAP,CAAYH,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAlB;IACH;;;sDAEiCD,Q,EAAUC,Q,EAAS;MAEjD,OAAOH,KAAK,CAACM,GAAN,CAAU,iCAAV,EACH;QACIC,OAAO,EAAE;UACLC,aAAa,EAAEC;QADV;MADb,CADG,CAAP;IAOH;;;2CAEsBP,Q,EAAUC,Q,EAAS;MACtC,IAAIM,eAAe,GAAG,WAAWL,MAAM,CAACC,IAAP,CAAYH,QAAQ,GAAG,GAAX,GAAiBC,QAA7B,CAAjC;MAEAO,OAAO,CAACC,GAAR,CAAY,wBAAZ;MACAC,cAAc,CAACC,OAAf,CAAuB,mBAAvB,EAA4CX,QAA5C;MACA,KAAKY,sBAAL,CAA4BL,eAA5B;IACH;;;6BAEO;MACJG,cAAc,CAACG,UAAf,CAA0B,mBAA1B;IACH;;;qCAEe;MACZ,IAAIC,IAAI,GAAGJ,cAAc,CAACK,OAAf,CAAuB,mBAAvB,CAAX;;MACA,IAAGD,IAAI,KAAK,IAAZ,EAAiB;QACb,OAAO,KAAP;MACH,CAFD,MAEK;QAAE,OAAO,IAAP;MAAa;IACvB;;;0CAEoB;MACjB,IAAIA,IAAI,GAAGJ,cAAc,CAACK,OAAf,CAAuB,mBAAvB,CAAX;;MACA,IAAGD,IAAI,KAAK,IAAZ,EAAiB;QACb,OAAO,EAAP;MACH,CAFD,MAEM,OAAOA,IAAP;IACT;;;2CAEsBP,e,EAAgB;MAAA;;MACnCT,KAAK,CAACkB,YAAN,CAAmBC,OAAnB,CAA2BC,GAA3B,CACI,UAACC,MAAD,EAAY;QACR,IAAG,KAAI,CAACC,cAAL,EAAH,EAAyB;UACrBD,MAAM,CAACd,OAAP,CAAeC,aAAf,GAA+BC,eAA/B;QACH;;QACD,OAAOY,MAAP;MACH,CANL;IAQH;;;;;;AAIL,eAAe,IAAIpB,qBAAJ,EAAf"},"metadata":{},"sourceType":"module"}